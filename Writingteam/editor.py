import openai
import os

# Set the API key
openai.api_key = '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'

# Read the blog post draft from the file
with open(os.path.realpath(os.path.join(os.path.dirname(__file__), '..', 'Outputs', 'blog_post_draft.txt')), 'r') as f:
    draft = f.read()


def edit_blog_post(draft, editor_type='general'):
    
    # Create a system message based on the type of editor
    if editor_type == 'tech':
        system_message = "You are an experienced editor for a tech publication with over 10+ years of experience."
    if editor_type == 'food':
        system_message = "You are an experienced editor for a food publication with over 10+ years of experience."
    if editor_type == 'music':
        system_message = "You are an experienced editor for a music publication with over 10+ years of experience."
    if editor_type == 'fashion':
        system_message = "You are an experienced editor for a fashion publication with over 10+ years of experience."
    if editor_type == 'entertainment':
        system_message = "You are an experienced editor for a film and television publication with over 10+ years of experience."
    if editor_type == 'sports':
        system_message = "You are an experienced editor for a sports publication with over 10+ years of experience."
    if editor_type == 'gaming':
        system_message = "You are an experienced editor for a sports publication with over 10+ years of experience."
    else:
        system_message = "You are a skilled editor."

    # Construct a conversation with the system message and the blog post draft
    conversation = [
        {"role": "system", "content": system_message},
        {"role": "user", "content": f"Please review the following blog post and provide suggestions for improvement: {draft}"}
    ]

    # Generate the suggestions using OpenAI
    response = openai.ChatCompletion.create(
      model="gpt-3.5-turbo",
      messages=conversation
    )

    # Extract the suggestions generated by the AI
    suggestions = response['choices'][0]['message']['content']
    print("Editor Notes Completed! Passing to the SEO Expert... \n")

    return suggestions